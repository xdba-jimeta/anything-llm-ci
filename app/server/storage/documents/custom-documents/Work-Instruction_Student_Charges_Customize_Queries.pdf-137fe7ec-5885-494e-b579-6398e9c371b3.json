{
    "id": "137fe7ec-5885-494e-b579-6398e9c371b3",
    "url": "file:///app/collector/hotdir/Work Instruction_Student_Charges_Customize_Queries.pdf",
    "title": "Work Instruction_Student_Charges_Customize_Queries.pdf",
    "docAuthor": "Microsoft Word",
    "description": "Using the Mass Add tool in Jenzabar.  A Step by Step for Assigning eBlast Actions to Constituents",
    "docSource": "pdf file uploaded by the user.",
    "chunkSource": "",
    "published": "7/28/2024, 12:40:57 PM",
    "wordCount": 1847,
    "pageContent": "Work Instruction  Customize the Student Charges Queries in   Jenzabar  Author: John Franklin, Senior Technologist, CampusWorks Inc.  First Publication Date: 01/10/2018  PURPOSE  This work instruction covers the basic   method to modify the Student Charges   selection set queries. This work  instruction is provided as a basic how to. It does not cover all of the query syntax and logic required to develop  an appropriate query. This work instruction only covers modification of the Year, Term and Subterm values   as a  means to create appropriate selection set queries for a new term.  PRECONDITIONS  The user must have a Jenzabar account.  The user must have access to the Accounts Receivable module.  The user must have permission to utilize the “Student Charges” window.  The user must have “Customize” permissions for the selection set queries.  If you are missing any of these permissions, you will be unable to perform these tasks. If that is the case, contact  your Jenzabar Security Administrator to request the appropriate permissions.  THE   STUDENT CHARGES   SCREEN  1)   Click on the Student Charges tool link to open the Student Charges window.   See Figure 1. Figure 1   –   The “Student Charges” link.  The “Student Charges” window will be displayed. See Figure 2.  Figure   2   –   The   “Student Charges” Window.  2)   Select the query you wish to copy from the drop - down list of selection set queries. In this case we are  selecting the “q_student_master_sm2018_all” query. See figure 3.  Figure 3   –   Selecting the “q_student_master_sm2018_all” query from the drop - down list.  3)   Click the “Customize” button. Clicking on the “Customize” button will launch InfoMaker. The InfoMaker  screen will be displayed, and the selected query will be opened.  4)   Assuming you are simply wanting to re - use the same logic previously used and wish to simply update  the year code, the next thing you want to do is perform a “Save As” operation. Click the “File” menu  and select the “Save As” option. See Figure 4. Figure 4   –   The “Save As” menu item.  The “Save Report” dialog will be displayed. See Figure 5.  Figure 5   –   The “Save Report” dialog.  Change the name of the report in order to create a copy. In this instance, we simply want to update the  year so we will rename the report to “q_student_master_sm2019_all”.   The report is saved with the  new name. Now we need to modify the query.  5)   Click on “Data Source” button to open the query editing screen. See Figure 6. Figure 6   –   The “Data Source” button.  The “Select” statement editing window will open.   See Figure 7. [ Please note, the query may be  presented as a “syntax” only text query, or it may be displayed as a “graphical” query. Learning to  modify either type of query is advisable. In this case, we are editing a “syntax” text query. ]  Figure 7   –   The “Select” statement editing window.  6)   Since we are only changing the Year code within the WHERE clause, simply select the year code, ‘2018’  and change it to ‘2019’. Single quotes are required per proper T - SQL syntax. Other queries/reports may  contain other criteria that might also need to be   edited. Identifying the correct WHERE clause criteria is  the responsibility of the individual editing the queries.  7)   Click on the “Return” button to go back to the main report window. [Note, a dialog may appear stating  that you may need to “re - retrieve your data”. Simply click on the “OK” button to continue.]  8)   Click on the “File” menu and select the “Save” menu item to save the report.  9)   You may now close the InfoMaker application.  10)   When you return to the “Student Charges” window, your new query will NOT be included in the drop -  down menu. This is due to the fact that the tool only reads the available queries when it is first opened  up. In order to view your new selection set query i n the drop - down window you will need to first close  and then reopen the “Student Charges” window.  MODIFYING OTHER QUERIES  Following is the syntax of a substantially more complex query. This is from the  “ q_student_master_sm2018_deltas ” drop - down query. In this case, if you wanted to update this query for a  new year and term would need to replace ALL   yr_cde   and   trm_cde   WHERE clause elements. The following query  contains highlighted text showing where the changes would need to be made. Clearly, great care and attention  to detail is required in order to successfully modify such a query.  InfoMaker does have a search and replace feature within the SQL editing window. So it is possible to utilize that  tool to search and replace all instances of a character pattern. Use of this feature is recommended.  WITH  --   This is the Enrolled and Not Charged section.  Enrolled   AS ( SELECT   distinct   sch . ID_NUM ,   sch . ADD_DTE ,   sch . CRS_CDE ,   sch . CRS_TITLE  from   STUDENT_CRS_HIST sch  WHERE   sch . yr_cde   =   ' 2018 '   and   sch . trm_cde   =   ' SM '   and   sch . TRANSACTION_STS   IN   ( 'C' ,   'H' )  ),  Charged   AS  ( SELECT   distinct   ID_NUM  from   TRANS_HIST th  WHERE   th . CHG_YR_TRAN_HIST   =   ' 2018 '   and   th . CHG_TRM_TRAN_HIST   =   ' SM '   and   source_CDE   IN   ( 'CG' ,  '@C' )  ),  --   This is the all students who   were Ever Enrolled and who have had Student Course History  Transactions  --   that occurred AFTER the most recent Student Charges run was made.  Ever_Enrolled   AS  ( SELECT   distinct   sch . ID_NUM ,   sch . ADD_DTE ,   sch . CRS_CDE ,   sch . CRS_TITLE  from   STUDENT_CRS_HIST sch  WHERE   sch . yr_cde   =   ' 2018 '   and   sch . trm_cde   =   ' SM '  ),  Max_SCH_Activity_Date   AS  ( SELECT   Temp . ID_NUM ,   MAX ( Activity_Date )   AS   Max_Activity_Date  FROM  ( Select   ID_Num ,   MAX ( add_dte )   AS   Activity_Date   FROM   STUDENT_CRS_HIST sch   WHERE   sch . yr_cde   =  ' 2018 '   and   sch . trm_cde   =   ' SM '   GROUP   BY   ID_NUM  UNION   ALL  Select   ID_Num ,   MAX ( Drop_Dte )   AS   Activity_Date   FROM   STUDENT_CRS_HIST sch   WHERE   sch . yr_cde   =  ' 2018 '   and   sch . trm_cde   =   ' SM '   GROUP   BY   ID_NUM  UNION   ALL  Select   ID_Num ,   MAX ( WithDrawal_Dte )   AS   Activity_Date   FROM   STUDENT_CRS_HIST sch   WHERE   sch . yr_cde   =  ' 2018 '   and   sch . trm_cde   =   ' SM '   GROUP   BY   ID_NUM  )   AS   Temp  GROUP   BY   ID_NUM  ),  Max_Trans_Hist_Activity_Date   AS  (  SELECT   ID_NUM ,   MAX ( TRANS_DTE )   AS   Max_Activity_Date  FROM   TRANS_HIST  WHERE  CHG_YR_TRAN_HIST   =   ' 2018 '  AND   CHG_TRM_TRAN_HIST   =   ' SM '  AND   SOURCE_CDE   IN   ( 'CG' ,   '@C' )  AND   SUBSID_CDE   =   'AS'  GROUP   BY   ID_NUM  ),  UNIONED   AS  ( SELECT   DISTINCT  nm . ID_NUM ,  CONCAT ( nm . LAST_NAME ,   ', ' ,   nm . first_name )   AS   Name  FROM  Ever_Enrolled   AS   e  JOIN   Max_SCH_Activity_Date   AS   sche   ON   sche . ID_NUM   =   e . ID_NUM  JOIN   Max_Trans_Hist_Activity_Date   AS   c   on   c . ID_NUM   =   sche . ID_NUM   AND   c . Max_Activity_Date   <  sche . Max_Activity_Date  JOIN   Name_Master   AS   NM   ON   nm . ID_NUM   =   e . ID_NUM  UNION   ALL  SELECT   DISTINCT  nm . ID_NUM , CONCAT ( nm . LAST_NAME ,   ', ' ,   nm . first_name )   AS   Name  FROM  Enrolled   AS   e  LEFT   OUTER   JOIN   Charged   AS   c   on   c . ID_NUM   =   e . ID_NUM  JOIN   Name_Master   AS   NM   ON   nm . ID_NUM   =   e . ID_NUM  WHERE  c . ID_NUM   is   null  )  SELECT   ID_NUM   FROM   UNIONED  END OF WORK   INSTRUCTIONS",
    "token_count_estimate": 2085
}