{
    "id": "e3291f33-b550-4e4d-a65d-438bea757709",
    "url": "file:///app/collector/hotdir/Active Directory Student Semester Groups Data Feed - As Built Documentation.pdf",
    "title": "Active Directory Student Semester Groups Data Feed - As Built Documentation.pdf",
    "docAuthor": "Microsoft® Word 2016",
    "description": "Using the Mass Add tool in Jenzabar.  A Step by Step for Assigning eBlast Actions to Constituents",
    "docSource": "pdf file uploaded by the user.",
    "chunkSource": "",
    "published": "7/28/2024, 12:53:37 PM",
    "wordCount": 971,
    "pageContent": "As Built   Documentation  Active Directory Student Semester Groups   Data Feed  Version   1. 1  Created:   02 / 11 /20 21  Author: John Franklin, CampusWorks   Inc.  Revised :  PURPOSE  The purpose of   the   Active Directory   (AD)   Student Semester Groups   data feed is to   ensure that AD  security/distribution groups exist for the entire student population taking coursework during any  specific se mester. T he integration between   the Jenzabar database   and   AD   is a   mulpti - step process  involving   SQL Query extracts, CSV file creation, delivery of CSV file, and processing of CSV file contents  into AD.  AS BUILT INFORMATION  Overview  The SQL code, batch files ,   and scheduled tasks reside on the database server, JZROX - SQL1   in the  C : \\ StudentADGroups   folder.  The   SQL quer y that is used for the data extract is located   in   the “sqlfiles” folder. The data extract   is   stored in the “datafiles” folder prior to being sent via   DOS Copy command over to the  \\ \\ RCCDC01   server.  The contects of the CSV file are as follows:  The CSV file contains the AD account name and the   “ calculated ”   AD Semester Group name that the  student should be added to. These are the only 2 parameters required   by the PowerShell script   to loa d  the student into th e AD Semester Groups.  Step   1   –   Extracting   the data to the   CSV file  Th e   SQL command file is executed using a batch file ,   ( export_to_csv.bat)   that calls the   SQLCommand  (SQLCmd) executable to output the resu lts to   the   CSV file.   The batch file i s   called   by a Windows  Scheduled Task named,   “ Export Student AD Semester Groups ”   which runs automatically, once a day at  3:15am . Th e   batch file also copies the CSV file from   “ \\ \\ JZROX - SQL1 \\   C: \\ StudentADGroups \\ datafiles ”   to  “ \\ \\ RCCDC01 \\ C: \\ Imp orts ”   folder   where it awaits consumption   and processing   by a PowerShell sc ript ,  “ \\ \\ RCCDC01 \\ C: \\ Scripts \\ Add_Student_To_Semester_Group.ps1 ” .  Step 2   -   Processing of the CSV file  The CSV file sits in the   “ \\ \\ RCCDC01 \\ C: \\ Imp orts ”   folder   until   procesing by   the PowerShell script .  The PowerShell script   is   located in the folder,  “ \\ \\ RCCDC01 \\ C: \\ Scripts \\ Add_Student_To_Semester_Group.ps1 ” .  It is   called   by a Windows Scheduled Task   once per day at   3:30am . The Scheduled Task is named ,  “ Student_AD_Semester_Group_Additions ” .  The PowerShell script processes each line   of the CSV sequen tially and adds each student   (AD Account)   to  the semester group indicated   by the CSV file.  Maintenance  Currently, this process is configured to run successfully for the next 5 years , through the Summer of  2026 .  This process has a dependenc y on manual setup of the AD Semester groups. And the naming  convention of these semester groups must be followed. The naming conv e n tion is as follows:  -   Fall Semesters:   Concatentate   “ FallStudents ”   + CalendarYear, i.e.   “ FallStudents2026 ” . -   January   Semesters:   Concatentate   “ Janu ary Students ”   + CalendarYear, i.e.  “ January Students202 7 ” .  -   Spring   Semesters:   Concatentate   “ Spring Students ”   + CalendarYear, i.e.   “ Spring Students202 7 ” .  -   Summer   Semesters:   Concatentate   “ Summer Students ”   + CalendarYear, i.e.  “ Summer Students202 7 ” .  At this point in time, the AD groups exist through Summer of 2026.   New groups will need to be created  starting with FallStudents2026   sometime during the summer of 202 6 .   It is most efficient to create these  groups 5 years at a time.  R outine configuration of the data feed   SQL query is also recommended.   Adjusting the Jenzabar Year  Code within the SQL script will reduce the number of records being processed. Once the Summer of  2021 is completed, it is advisa ble to update the Jenzabar Year Code from 2020 to 2021 within the SQL  script.   While this is advisable, it is certainly not required. If left as is, the net result will be that the  P owerShell script runs for a longer time. But it does no harm to leave this as is until after the 2025  Academic year has completed. END OF   AS BUILT DOCUMENTATI ON",
    "token_count_estimate": 1094
}